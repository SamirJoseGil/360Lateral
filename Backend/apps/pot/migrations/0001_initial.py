# Generated by Django 4.2.7 on 2025-10-20 02:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TratamientoPOT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único del tratamiento (ej: CN1)', max_length=10, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(help_text='Nombre del tratamiento', max_length=100, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del tratamiento', null=True, verbose_name='Descripción')),
                ('indice_ocupacion', models.DecimalField(blank=True, decimal_places=2, help_text='Relación área ocupada / área del lote (0-1)', max_digits=3, null=True, verbose_name='Índice de ocupación')),
                ('indice_construccion', models.DecimalField(blank=True, decimal_places=1, help_text='Relación área construida / área del lote', max_digits=3, null=True, verbose_name='Índice de construcción')),
                ('altura_maxima', models.PositiveSmallIntegerField(blank=True, help_text='Número máximo de pisos permitidos', null=True, verbose_name='Altura máxima (pisos)')),
                ('retiro_frontal', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Retiro frontal (m)')),
                ('retiro_lateral', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Retiro lateral (m)')),
                ('retiro_posterior', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Retiro posterior (m)')),
                ('metadatos', models.JSONField(blank=True, default=dict, help_text='Otros detalles específicos del tratamiento', verbose_name='Metadatos adicionales')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('activo', models.BooleanField(default=True, help_text='Indica si este tratamiento sigue vigente', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Tratamiento POT',
                'verbose_name_plural': 'Tratamientos POT',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='FrenteMinimoPOT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_vivienda', models.CharField(choices=[('unifamiliar', 'Unifamiliar'), ('bifamiliar_pisos_diferentes', 'Bifamiliar en pisos diferentes'), ('bifamiliar_mismo_piso', 'Bifamiliar en el mismo piso'), ('trifamiliar', 'Trifamiliar'), ('multifamiliar', 'Multifamiliar')], max_length=30, verbose_name='Tipo de vivienda')),
                ('frente_minimo', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Frente mínimo (m)')),
                ('tratamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frentes_minimos', to='pot.tratamientopot')),
            ],
            options={
                'verbose_name': 'Frente Mínimo POT',
                'verbose_name_plural': 'Frentes Mínimos POT',
                'unique_together': {('tratamiento', 'tipo_vivienda')},
            },
        ),
        migrations.CreateModel(
            name='AreaMinimaViviendaPOT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_vivienda', models.CharField(choices=[('1_alcoba', '1 Alcoba'), ('2_alcobas', '2 Alcobas'), ('3_alcobas_vip', '3 Alcobas VIP'), ('3_alcobas_vis', '3 Alcobas VIS'), ('4_alcobas_vip', '4 Alcobas VIP'), ('4_alcobas_vis', '4 Alcobas VIS')], max_length=30, verbose_name='Tipo de vivienda')),
                ('area_minima', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Área mínima (m²)')),
                ('tratamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas_minimas_vivienda', to='pot.tratamientopot')),
            ],
            options={
                'verbose_name': 'Área Mínima de Vivienda POT',
                'verbose_name_plural': 'Áreas Mínimas de Vivienda POT',
                'unique_together': {('tratamiento', 'tipo_vivienda')},
            },
        ),
        migrations.CreateModel(
            name='AreaMinimaLotePOT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_vivienda', models.CharField(choices=[('unifamiliar', 'Unifamiliar'), ('bifamiliar_pisos_diferentes', 'Bifamiliar en pisos diferentes'), ('bifamiliar_mismo_piso', 'Bifamiliar en el mismo piso'), ('trifamiliar', 'Trifamiliar'), ('multifamiliar', 'Multifamiliar')], max_length=30, verbose_name='Tipo de vivienda')),
                ('area_minima', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Área mínima (m²)')),
                ('tratamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas_minimas_lote', to='pot.tratamientopot')),
            ],
            options={
                'verbose_name': 'Área Mínima de Lote POT',
                'verbose_name_plural': 'Áreas Mínimas de Lote POT',
                'unique_together': {('tratamiento', 'tipo_vivienda')},
            },
        ),
    ]
