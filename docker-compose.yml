version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:14-alpine
    container_name: lateral360_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-lateral360}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lateral360_network

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: lateral360_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lateral360_network

  # Backend Django
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: lateral360_backend
    restart: unless-stopped
    volumes:
      - ./Backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DEBUG=1
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lateral360_network

  # Frontend Remix
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: lateral360_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"  # Remix directamente en puerto 3000
    depends_on:
      - backend
    env_file:
      - .env
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - NODE_ENV=development
    networks:
      - lateral360_network

# Vol√∫menes persistentes
volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

# Red personalizada
networks:
  lateral360_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16